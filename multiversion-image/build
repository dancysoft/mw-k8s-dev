#!/bin/bash

set -eu -o pipefail

WIKIVERSIONS=wikiversions-dev.json
BUILD_DIR=/srv/mediawiki

for tool in jq git sort; do
    if ! command -v $tool >/dev/null; then
        echo "Please install '$tool'"
        exit 1
    fi
done

function configure_git {

    git version

    git config --global protocol.version 2

    if [ "${GERRITMIRROR:-}" ]; then
        echo Using gerrit mirror at $GERRITMIRROR
        git config --global url.${GERRITMIRROR}.insteadOf https://gerrit.wikimedia.org/r
    fi
    
}

function unique_wikiversions {
    jq -r 'values[]' $WIKIVERSIONS | sort -u
}

function prep_version {
    local vers=$1               # vers will be something like php-1.36.0-wmf.27

    local nophpvers=${vers:4}   # will be something like 1.36.0-wmf.27
    local branch=wmf/$nophpvers # branch will be something like wmf/1.36.0-wmf.27

    time git clone \
         --depth 1 \
         -j $(getconf _NPROCESSORS_ONLN) \
         --recurse-submodules \
         -b $branch \
         https://gerrit.wikimedia.org/r/mediawiki/core \
         $vers

    cat <<EOF > $vers/LocalSettings.php
<?php
require __DIR__ . "/../wmf-config/CommonSettings.php";
EOF
}    


function checkout_mediawiki_config {
    time git clone --depth 1 -b dancy-k8s-dev https://gerrit.wikimedia.org/r/operations/mediawiki-config $BUILD_DIR
}

# Writes to stdout
function generate_wikiversions_php {
    cat <<EOF
<?php
return array(
EOF
    jq -r 'to_entries[] | "    \"\(.key)\" => \"\(.value)\","' < $WIKIVERSIONS
    cat <<EOF
);
EOF
}

function compile_wikiversions {
    php=$(basename $WIKIVERSIONS .json).php
    
    generate_wikiversions_php > $php
}

# Start fresh
rm -fr $BUILD_DIR

configure_git

checkout_mediawiki_config

cd $BUILD_DIR

compile_wikiversions

for vers in $(unique_wikiversions); do
    prep_version $vers
done

find $BUILD_DIR -name .git | xargs rm -fr

echo Image storage requirements
du $BUILD_DIR -s -h
